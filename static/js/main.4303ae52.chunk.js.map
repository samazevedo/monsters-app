{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","bind","fetch","then","response","json","user","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAEaA,EAAO,SAACC,GACjB,OACI,qBAAIC,UAAU,iBAAd,UACI,qBACIC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,0BACHC,IAAI,YAER,oBAAIJ,UAAU,OAAd,SAAsBD,EAAMG,QAAQG,OACpC,6BAAKN,EAAMG,QAAQI,YCNlBC,EAAW,SAACR,GACrB,OACI,qBAAKC,UAAU,YAAf,SACKD,EAAMS,SAASC,KAAI,SAACP,GACjB,OAAO,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCL7BO,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACrB,uBACIZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCkCHG,G,wDApCX,WAAYhB,GAAQ,IAAD,8BACf,cAAMA,IAaVa,aAAe,SAACI,GACZ,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAbtC,EAAKC,MAAQ,CACTb,SAAU,GACVU,YAAa,IAEjB,EAAKN,aAAe,EAAKA,aAAaU,KAAlB,gBANL,E,qDAQnB,WAAqB,IAAD,OAChBC,MAAM,8CACDC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAU,EAAKV,SAAS,CAAET,SAAUmB,S,oBAMlD,WAAU,IAAD,EAC6BC,KAAKP,MAA/Bb,EADH,EACGA,SAAUU,EADb,EACaA,YACZW,EAAmBrB,EAASsB,QAAO,SAAC5B,GAAD,OACrCA,EAAQG,KAAK0B,cAAcC,SAASd,EAAYa,kBAGpD,OACI,sBAAK/B,UAAU,MAAf,UACI,gDACA,cAAC,EAAD,CACIW,YAAY,iBACZC,aAAcgB,KAAKhB,eAEvB,cAAC,EAAD,CAAUJ,SAAUqB,W,GA/BlBI,cCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,SAM5BZ,M","file":"static/js/main.4303ae52.chunk.js","sourcesContent":["import React from 'react'\r\nimport './card.styles.css'\r\nexport const Card = (props) => {\r\n    return (\r\n        <li className='card-container'>\r\n            <img\r\n                src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}\r\n                alt='monster'\r\n            />\r\n            <h1 className='card'>{props.monster.name}</h1>\r\n            <h2>{props.monster.email}</h2>\r\n        </li>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './card-list.styles.css'\r\nimport { Card } from '../card/card.component'\r\n\r\nexport const CardList = (props) => {\r\n    return (\r\n        <div className='card-list'>\r\n            {props.monsters.map((monster) => {\r\n                return <Card key={monster.id} monster={monster} />\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport './search-box.styles.css'\r\nexport const SearchBox = ({ placeholder, handleChange }) => (\r\n    <input\r\n        className='search'\r\n        type='search'\r\n        placeholder={placeholder}\r\n        onChange={handleChange}\r\n    />\r\n)\r\n","import React, { Component } from 'react'\nimport { CardList } from './components/card-list/card-list.component'\nimport { SearchBox } from './components/search-box/search-box.component'\nimport './App.css'\n\nclass App extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            monsters: [],\n            searchField: '',\n        }\n        this.handleChange = this.handleChange.bind(this)\n    }\n    componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then((response) => response.json())\n            .then((user) => this.setState({ monsters: user }))\n    }\n\n    handleChange = (e) => {\n        this.setState({ searchField: e.target.value })\n    }\n    render() {\n        const { monsters, searchField } = this.state\n        const filteredMonsters = monsters.filter((monster) =>\n            monster.name.toLowerCase().includes(searchField.toLowerCase())\n        )\n\n        return (\n            <div className='App'>\n                <h1>Monsters' App </h1>\n                <SearchBox\n                    placeholder='Search Monster'\n                    handleChange={this.handleChange}\n                />\n                <CardList monsters={filteredMonsters} />\n            </div>\n        )\n    }\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}